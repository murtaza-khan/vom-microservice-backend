input OrgInput {
    id:ID
    name: String!
    address: String!
    logo: String!
    BN: String!
}

input UpdateOrgInput {
    id:ID
    name: String
    address: String
    logo: String
    BN: String
}

type UserTypet {
  id:ID!
  firstName:String!
  lastName: String!
  email: String!
  phone:String!
  userRole: String!
  organization : String!
  groupId : String
}

type GroupType {
    id:ID!
    name:String!
    createdAt:String!
    users:[UserTypet]
}

type OrgType {
    id: ID!
    name: String!
    address: String!
    logo: String!
    BN: String!
    createdAt: String!
    subscriptionDate: String!
    subscriptionStatus: String!
    groups: [GroupType]
    affiliateId: String
    admin: [UserTypet]
}

type OrgByAffliate {
    id: ID!
    name: String!
}

type Query {
    getOrgs(orgId:String):[OrgType!]
    getOrgsByAffiliateId(affiliateId : String!):[OrgByAffliate!]
}

type Mutation {
    createOrg(orgData: OrgInput!): OrgType
    editOrg(orgData : UpdateOrgInput!): OrgType
    deleteOrgById(orgId : String!) : String
}